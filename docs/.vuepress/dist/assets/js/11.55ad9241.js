(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{262:function(a,e,t){"use strict";t.r(e);var i=t(0),r=Object(i.a)({},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"proxima-data-vertex"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#proxima-data-vertex","aria-hidden":"true"}},[a._v("#")]),a._v(" Proxima Data Vertex")]),a._v(" "),t("p",[a._v("A data vertex provides DApp data in a graphql interface using a specialized set of eventhandlers, resovlers, and a database designed to host the files.")]),a._v(" "),t("h2",{attrs:{id:"configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuration","aria-hidden":"true"}},[a._v("#")]),a._v(" Configuration")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("database config")])]),a._v(" "),t("li",[t("p",[a._v("name config")])]),a._v(" "),t("li",[t("p",[a._v("aggregator configs")])]),a._v(" "),t("li",[t("p",[a._v("organization config")])]),a._v(" "),t("li",[t("p",[a._v("Volume mount")])]),a._v(" "),t("li",[t("p",[a._v("config cache, batch processing")])])]),a._v(" "),t("h2",{attrs:{id:"organization"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#organization","aria-hidden":"true"}},[a._v("#")]),a._v(" Organization")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Names and configuration")]),a._v(" "),t("ul",[t("li",[a._v("Authorization")]),a._v(" "),t("li",[a._v("Name and identifier")]),a._v(" "),t("li",[a._v("version")])])]),a._v(" "),t("li",[t("p",[t("em",[a._v("Query handling")])]),a._v(" "),t("ul",[t("li",[a._v("schema")]),a._v(" "),t("li",[a._v("resolvers")]),a._v(" "),t("li",[a._v("query handling")])])]),a._v(" "),t("li",[t("p",[t("em",[a._v("Database")])]),a._v(" "),t("ul",[t("li",[a._v("tables creation (with cache")])])]),a._v(" "),t("li",[t("p",[t("em",[a._v("DApp aggregator")])]),a._v(" "),t("ul",[t("li",[a._v("handlers for blockchain events")]),a._v(" "),t("li",[a._v("blockchain client")]),a._v(" "),t("li",[a._v("smart contract abi")]),a._v(" "),t("li",[a._v("mutation/updates to schema entities (client schema)")])])])]),a._v(" "),t("h2",{attrs:{id:"start-up"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#start-up","aria-hidden":"true"}},[a._v("#")]),a._v(" Start-up")]),a._v(" "),t("ul",[t("li",[a._v("done through docker  compose")]),a._v(" "),t("li",[a._v("Database container")]),a._v(" "),t("li",[a._v("DApp aggregator container")]),a._v(" "),t("li",[a._v("DApp data vertex container")])]),a._v(" "),t("p",[a._v("docker-componse up (config)")]),a._v(" "),t("h3",{attrs:{id:"query-query-the-database-with-the-assumption-that-the-data-is-being-passed-back-as-a-model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#query-query-the-database-with-the-assumption-that-the-data-is-being-passed-back-as-a-model","aria-hidden":"true"}},[a._v("#")]),a._v(" Query (query the database with the assumption that the data is being passed back as a model)")]),a._v(" "),t("ul",[t("li",[a._v("Provide the default query inputs for the query table (args)")]),a._v(" "),t("li",[a._v("Given from model resolver")])]),a._v(" "),t("h3",{attrs:{id:"database-resolver-model-push"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#database-resolver-model-push","aria-hidden":"true"}},[a._v("#")]),a._v(" Database Resolver/Model Push")]),a._v(" "),t("ul",[t("li",[a._v("process the models, so that they can be resolved from JSON, with special respect to the proofs")])]),a._v(" "),t("h3",{attrs:{id:"database-cache"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#database-cache","aria-hidden":"true"}},[a._v("#")]),a._v(" Database + Cache")]),a._v(" "),t("ul",[t("li",[a._v("if not found then get from database and set in the cache\nreturn the value")])])])},[],!1,null,null,null);e.default=r.exports}}]);